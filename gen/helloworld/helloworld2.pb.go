// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld/helloworld2.proto

package helloworld

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/utahta/grpc-go-protoreflect-example/gen/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Hello2Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hello2Request) Reset()         { *m = Hello2Request{} }
func (m *Hello2Request) String() string { return proto.CompactTextString(m) }
func (*Hello2Request) ProtoMessage()    {}
func (*Hello2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_210324255ea2d58a, []int{0}
}

func (m *Hello2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hello2Request.Unmarshal(m, b)
}
func (m *Hello2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hello2Request.Marshal(b, m, deterministic)
}
func (m *Hello2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hello2Request.Merge(m, src)
}
func (m *Hello2Request) XXX_Size() int {
	return xxx_messageInfo_Hello2Request.Size(m)
}
func (m *Hello2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Hello2Request.DiscardUnknown(m)
}

var xxx_messageInfo_Hello2Request proto.InternalMessageInfo

func (m *Hello2Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Hello2Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hello2Reply) Reset()         { *m = Hello2Reply{} }
func (m *Hello2Reply) String() string { return proto.CompactTextString(m) }
func (*Hello2Reply) ProtoMessage()    {}
func (*Hello2Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_210324255ea2d58a, []int{1}
}

func (m *Hello2Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hello2Reply.Unmarshal(m, b)
}
func (m *Hello2Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hello2Reply.Marshal(b, m, deterministic)
}
func (m *Hello2Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hello2Reply.Merge(m, src)
}
func (m *Hello2Reply) XXX_Size() int {
	return xxx_messageInfo_Hello2Reply.Size(m)
}
func (m *Hello2Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Hello2Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Hello2Reply proto.InternalMessageInfo

func (m *Hello2Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Hello2Request)(nil), "helloworld.Hello2Request")
	proto.RegisterType((*Hello2Reply)(nil), "helloworld.Hello2Reply")
}

func init() { proto.RegisterFile("helloworld/helloworld2.proto", fileDescriptor_210324255ea2d58a) }

var fileDescriptor_210324255ea2d58a = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc9, 0x48, 0xcd, 0xc9,
	0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x47, 0x30, 0x8d, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2,
	0x85, 0xb8, 0x10, 0x42, 0x52, 0xc2, 0xf9, 0x05, 0x25, 0x99, 0xf9, 0x79, 0xfa, 0x10, 0x0a, 0xa2,
	0x40, 0x49, 0x99, 0x8b, 0xd7, 0x03, 0xa4, 0xc4, 0x28, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44,
	0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc,
	0x56, 0x52, 0xe7, 0xe2, 0x86, 0x29, 0x2a, 0xc8, 0xa9, 0x14, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d,
	0x2e, 0x4e, 0x4c, 0x87, 0xa9, 0x82, 0x71, 0x8d, 0xc2, 0xb8, 0x38, 0xdc, 0x8b, 0x52, 0x53, 0x4b,
	0x52, 0x8b, 0x8c, 0x84, 0xbc, 0xb8, 0x38, 0x83, 0x13, 0x2b, 0x21, 0xfa, 0x84, 0x24, 0xf5, 0x10,
	0x0e, 0xd1, 0x43, 0xb1, 0x50, 0x4a, 0x1c, 0x9b, 0x54, 0x41, 0x4e, 0xa5, 0x12, 0xe7, 0x09, 0x3b,
	0xc6, 0x13, 0x76, 0x4c, 0x27, 0xec, 0x98, 0x9d, 0xbc, 0xa2, 0x3c, 0xd2, 0x33, 0x4b, 0x32, 0x4a,
	0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x4b, 0x4b, 0x12, 0x33, 0x4a, 0x12, 0xf5, 0xd3, 0x8b, 0x0a,
	0x92, 0x75, 0xd3, 0xf3, 0x75, 0xc1, 0x1e, 0x29, 0x4a, 0x4d, 0xcb, 0x49, 0x4d, 0x2e, 0xd1, 0x4d,
	0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x4f, 0x4f, 0xcd, 0x43, 0x0a, 0x0e, 0x6b, 0x04, 0x33,
	0x89, 0x0d, 0xac, 0xde, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x8d, 0xa7, 0x7b, 0x39, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Greeter2Client is the client API for Greeter2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Greeter2Client interface {
	SayHello2(ctx context.Context, in *Hello2Request, opts ...grpc.CallOption) (*Hello2Reply, error)
}

type greeter2Client struct {
	cc *grpc.ClientConn
}

func NewGreeter2Client(cc *grpc.ClientConn) Greeter2Client {
	return &greeter2Client{cc}
}

func (c *greeter2Client) SayHello2(ctx context.Context, in *Hello2Request, opts ...grpc.CallOption) (*Hello2Reply, error) {
	out := new(Hello2Reply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter2/SayHello2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Greeter2Server is the server API for Greeter2 service.
type Greeter2Server interface {
	SayHello2(context.Context, *Hello2Request) (*Hello2Reply, error)
}

func RegisterGreeter2Server(s *grpc.Server, srv Greeter2Server) {
	s.RegisterService(&_Greeter2_serviceDesc, srv)
}

func _Greeter2_SayHello2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Hello2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Greeter2Server).SayHello2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter2/SayHello2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Greeter2Server).SayHello2(ctx, req.(*Hello2Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Greeter2",
	HandlerType: (*Greeter2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello2",
			Handler:    _Greeter2_SayHello2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld/helloworld2.proto",
}
